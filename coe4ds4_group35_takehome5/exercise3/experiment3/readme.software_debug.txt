Copyright by Adam Kinsman, Henry Ko and Nicola Nicolici
Developed for the Embedded Systems course (COE4DS4)
Department of Electrical and Computer Engineering
McMaster University, Ontario, Canada

This file contains instructions for using the debug environment (or debug perspective as labeled by Altera) in NIOS II to perform software debug.

The instructions to activate the debug environment in NIOS SDK are as follows.

===========

- Launch Nios SDK
	
- Import "experiment3" and "experiment3_bsp" to the workspace

- Build the design under NIOS SDK as in previous lab. 

Note, you may experience the following compiler error: 

"alt_sys_init.c:62:48: error: Altera_UP_SD_Card_Avalon_Interface.h: No such file or directory", followed by many others

	- This is a bug with this particular version of Qsys/NIOS SDK and the set of IP provided by Altera
	- In order to fix it, expand "experiment3_bsp" under the Project Explorer and open "alt_sys_init.c"
	- Go to line 62 (highlighted red to indicate the error" and change it from
		#include "Altera_UP_SD_Card_Avalon_Interface.h"
	  to
		#include "altera_up_sd_card_avalon_interface.h"
	- Restart the compilation

- After compilation is finished, start the debug environment by right-clicking on "experiment3" in the project window, and select "Debug as"->"Nios II Hardware"

- When NIOS SDK prompts for switching into the debug environment, click "Yes". You can switch between the workspace perspective and debug perspective by going through the "Window"->"Open Perspective" menu

The instructions to navigate the debug environment in NIOS SDK are as follows.
===========

- The debug environment is divided into five sections:
	-- Top left: The "Debug" panel.
		--- It shows the execution of the software in different threads (For example, when you first start the debug environment, it should shows the software execution to be suspended at the main() function)
		--- It provides the following buttons to control the execution of the software. The following are the buttons that are of interests to us:
			---- Resume (This resumes the execution of software)
			---- Suspend (This suspends the execution of software. If the processor suspends outside the scope of the current file, the NIOS SDK opens the source file corresponding to the current program counter)
			---- Terminate (This terminates the debug session)
			---- Step Into (If executing a line of code that calls a function, the debugger steps into the function. Otherwise it executes the line of code and suspends on the next line in the current function. You can also step into a function by pressing F5)
			---- Step Over (If executing a line of code that calls a function, the debugger executes the entire called function and suspends on the next line in the current function. Otherwise it executes the line of code and suspends on the next line in the current function. You can also step over a line of code by pressing F6)
			---- Step Return (The debugger finishes executing the current function, returns to the calling function, and suspends on the next line in the calling function. You can also step return from a function by pressing F7)
			---- Instruction stepping mode (This activates/deactivates the instruction stepping mode. When it is activated, you can single step the execution of each CPU instruction during debug)
	-- Top right: The Variable, Breakpoints, Registers and Module views
		--- The variable view shows the values of the local variables of the function that is being executed. You can right click on this area to add global variables in this view
		--- The breakpoint view shows the breakpoints that are inserted. You can enable/disable each breakpoint by checking/unchecking the corresponding breakpoints here
		--- The Registers view shows the values of the registers in the NIOS processor
		--- The module view shows all the modules that are used by the current project
	-- Middle left: Code view
		--- This shows the C source code of the software that is being executed. You can navigate through the code and insert/delete breakpoints during debug by double-clicking or right-clicking on the left margin of the corresponding line of code in this window
	-- Middle right: The Outline, Make Target and Disassembly view
	 	--- The outline view can be used to navigate among functions in the C file shown in the Code view
		--- The make target view shows components generated by make during project compilation
		--- The disassembly view will be shown when you activate the "Instruction stepping mode". It shows the assembly instructions that are being executed
	-- Bottom: Console view
		--- This is the nios-terminal that functions as the STDIO and shows the output of the software during execution
		
- The procedure for debugging a software using NIOS SDK is as follows:
	-- After you start a debug session, the debugger loads the program, sets a breakpoint at main(), and begins executing the program
	-- You can navigate through the C code in the Code view and setup one or multiple breakpoints by double-clicking in the left-hand margin of the code view, or right-click in the margin and then click "Toggle Breakpoint"
	-- After you have setup the breakpoints, click on the "Resume" button in the Debug panel and let the software execute until the breakpoint is reached
	-- When the software is suspended at the breakpoint, you can check the values of variables in the "variable views"
	-- You can also single step through the code using the "Step Into", "Step Over" and "Step Return" buttons to follow the execution of the software
